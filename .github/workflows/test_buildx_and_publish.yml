name: Test, build and publish

on:
  push:
  pull_request:
  workflow_dispatch:
  workflow_call:

env:
  REPOSITORY: moodle-php-apache
  DOCKERHUB_OWNER: moodlehq
  GH_OWNER: moodlehq

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run tests
        run: |
          set -x
          # Verify that CLI execution only includes the expected output (if we discard stderr).
          echo zero
          docker run --rm --name test1 -v $PWD/tests/fixtures:/var/www/html stronk7/moodle-php-apache:dev php /var/www/html/check-stderr.php 2>/dev/null
          echo one
          stdout=$(docker run --rm -v $PWD/tests/fixtures:/var/www/html --name test1 stronk7/moodle-php-apache:dev php /var/www/html/check-stderr.php 2>/dev/null)
          echo two
          [[ ${stdout} == "Hello World!" ]] && echo "OK" || echo "Fail"
          echo three
          # Verify that stderr still contains information about the bootstrap.
          stdout=$(docker run --rm -v $PWD/tests/fixtures:/var/www/html --name test1 stronk7/moodle-php-apache:dev php /var/www/html/check-stderr.php 2>&1)
          echo four
          [[ ${stdout} =~ "Checking for php configuration" ]] && echo "OK" || echo "Fail"
          echo five

      - name: Display container logs on failure
        if: failure()
        run: |
          docker logs test1

      - name: Cleanup docker images
        run: |
          docker rm -f test1
